// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DbContext))]
    partial class DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DomainLayer.Models.Adress", b =>
                {
                    b.Property<string>("AdressBarcode")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Column")
                        .HasColumnType("int");

                    b.Property<int>("Face")
                        .HasColumnType("int");

                    b.Property<int>("ProductAmount")
                        .HasColumnType("int");

                    b.Property<long?>("ProductBarcode")
                        .HasColumnType("bigint");

                    b.Property<int>("Row")
                        .HasColumnType("int");

                    b.Property<string>("ShelfId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("AdressBarcode");

                    b.HasIndex("ProductBarcode");

                    b.HasIndex("ShelfId");

                    b.ToTable("adresses");
                });

            modelBuilder.Entity("DomainLayer.Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("BrandId");

                    b.ToTable("brands");
                });

            modelBuilder.Entity("DomainLayer.Models.Product", b =>
                {
                    b.Property<long>("Barcode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int?>("BrandFId")
                        .HasColumnType("int");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductCategoryFId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Barcode");

                    b.HasIndex("BrandFId");

                    b.HasIndex("ProductCategoryFId");

                    b.ToTable("products");
                });

            modelBuilder.Entity("DomainLayer.Models.ProductCategory", b =>
                {
                    b.Property<int>("ProductCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ProductsCategoryName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ProductCategoryId");

                    b.ToTable("productCategories");
                });

            modelBuilder.Entity("DomainLayer.Models.Shelf", b =>
                {
                    b.Property<string>("ShelfId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ShelfId");

                    b.ToTable("shelves");
                });

            modelBuilder.Entity("DomainLayer.Models.Adress", b =>
                {
                    b.HasOne("DomainLayer.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductBarcode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DomainLayer.Models.Shelf", "Shelf")
                        .WithMany("Adresses")
                        .HasForeignKey("ShelfId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Product");

                    b.Navigation("Shelf");
                });

            modelBuilder.Entity("DomainLayer.Models.Product", b =>
                {
                    b.HasOne("DomainLayer.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandFId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DomainLayer.Models.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryFId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Brand");

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("DomainLayer.Models.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DomainLayer.Models.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DomainLayer.Models.Shelf", b =>
                {
                    b.Navigation("Adresses");
                });
#pragma warning restore 612, 618
        }
    }
}
